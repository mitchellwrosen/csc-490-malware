#ifndef REGISTRY_KEY_H_
#define REGISTRY_KEY_H_

#include <windows.h>

#include <iostream>
#include <map>
#include <utility>

#define MAX_KEY_LEN 255
#define MAX_VAL_KEY_LEN 16383
#define MAX_VAL_VAL_LEN 16383 // TODO: What should this be?


// A single registry key, with sub keys and values.
class RegistryKey : public Serializable {
 public:
  RegistryKey(string name, HKEY keyHandle);

  // Map from value name to value value.
  typedef map<string, vector<BYTE> > RegistryKeyValues;

  // Map from key name to key struct.
  typedef map<string, RegistryKey*> RegistryKeySubKeys;

  // Serializable
  void encode(ostream& outstream);
  void decode(istream& instream);

 private:
  void getSubKeysAndValsCounts(HKEY keyHandle, DWORD* subKeysCount, DWORD* valsCount);
  string getSubKeyName(HKEY keyHandle, int i);

  TCHAR keyNameBuf_[MAX_KEY_LEN];
  TCHAR valNameBuf_[MAX_VAL_NAME_LEN];
  BYTE valValBuf_[MAX_VAL_VAL_LEN];

  string name_;
  RegistryKeySubKeys subKeys_;
  RegistryKeyValues values_;
};

#endif REGISTRY_KEY_H_
